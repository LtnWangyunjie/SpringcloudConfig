eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 8774
    
spring.redis.host: 192.168.223.43
spring.redis.port: 6379
spring.redis.password: guohuaiGUO4056
spring.redis.database: 3


spring.datasource.name: dataSource
spring.datasource.url: jdbc:log4jdbc:mysql://192.168.223.43:3306/gh_mar_2_2?characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.datasource.username: root
spring.datasource.password: guohuaiGUO4056&

# 参考https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
# 初始化大小，最小，最大连接数
spring.datasource.druid.initial-size: 5
spring.datasource.druid.max-active: 50
spring.datasource.druid.min-idle: 5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait: 60000
# 是否缓存preparedStatement，也就是PSCache。
spring.datasource.druid.pool-prepared-statements: false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size: -1
#spring.datasource.druid.max-open-prepared-statements: -1 #和上面的等价
spring.datasource.druid.validation-query: select 1
#spring.datasource.druid.validation-query-timeout:
spring.datasource.druid.test-on-borrow: true
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-return: false
# 申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis， 执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle: true


#spring.datasource.type: com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name: net.sf.log4jdbc.DriverSpy
#spring.datasource.driver-class-name: com.mysql.jdbc.Driver
spring.datasource.validation-query: select 1
spring.datasource.test-on-borrow: true
spring.data.rest.basePath: /repo

# Hibernate settings are prefixed with spring.jpa.hibernate.*
spring.jpa.database: MYSQL
spring.jpa.open-in-view: true
spring.jpa.hibernate.ddl-auto: none
spring.jpa.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
#spring.jpa.hibernate.naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql: true
spring.jpa.format-sql: true
spring.data.rest.detection-strategy: annotated

spring:
  application:
    name: service-ribbon-mqs
  cloud:
    stream:
      bindings:
        inputOrder:
          destination: mqTestOrder
          binder: local_rabbit
          group: addProductHandler      # 拥有 group 默认会持久化队列
      binders:
        local_rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: guest
                password: guest
                virtual-host: /
